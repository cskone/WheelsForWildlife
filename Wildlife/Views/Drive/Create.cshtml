@model Wildlife.Models.Drive

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Drive</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DriveName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DriveName, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.DriveName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartLocation, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.StartLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndLocation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EndLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtraDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExtraDetails,new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExtraDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriverId, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DriverId, new { placeholder = "Fill only if preselected driver", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
            </div>
            @*@Html.Label("Fill if a preselected driver has been chosen only", htmlAttributes: new { @class = "control-label col-md-2" })*@

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
